1.VLFeat不支持arm架构，
2.#   spec.xcconfig = {
#   'HEADER_SEARCH_PATHS' => '${PROJECT_DIR}/../**' 
#   }
#这里不要去搜eigen的头文件路径，否则会出Could not build module 'Darwin'
PROJECT_DIR=>.xcodeproj的路径
3.libpng编译时需要打开arm_neon: in CMakeLists.txt, do set(TARGET_ARCH arm64)
4.关于各依赖库ios平台交叉编译：一般需要在每个库的CMakeLists.txt中添加以下代码：
set(CMAKE_C_COMPILER /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang)
set(CMAKE_CXX_COMPILER /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++)
set(IOS_ARCH arm64)

set(CMAKE_TOOLCHAIN_FILE ~/Codes/ios.toolchain.cmake)
set(IOS_PLATFORM OS64COMBINE)

set(CMAKE_SYSTEM_NAME iOS)
set(CMAKE_SYSTEM_VERSION 16.4)

set(IOS_DEPLOYMENT_TARGET 11.0)

然后
cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=~/Codes/ios.toolchain.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./build/install -DIOS_PLATFORM=OS64COMBINE -DIOS_ARCH="arm64;arm64e" -DCMAKE_SYSTEM=iOS-16.4


5.关于依赖库的符号解析：
nm -A /Users/hph/Codes/alembic-1.8.5/build/lib/Alembic/Release-iphoneos/libAlembic.1.8.5.a | grep WriteArchive   
/Users/hph/Codes/alembic-1.8.5/build/lib/Alembic/Release-iphoneos/libAlembic.1.8.5.a:ReadWrite.o: 0000000000000004 T __ZN7Alembic12AbcCoreOgawa3v1212WriteArchiveC1Ev
/Users/hph/Codes/alembic-1.8.5/build/lib/Alembic/Release-iphoneos/libAlembic.1.8.5.a:ReadWrite.o: 0000000000000000 T __ZN7Alembic12AbcCoreOgawa3v1212WriteArchiveC2Ev
使用如下命令还原符号：
c++filt __ZN7Alembic12AbcCoreOgawa3v1212WriteArchiveC2Ev
Alembic::AbcCoreOgawa::v12::WriteArchive::WriteArchive()

6.OpenImageIO
Xcode=>BuildSettings=>Implicit Conversion to 32 Bit Type(No)

7.OpenExr
a.cmake中设置option(BUILD_SHARED_LIBS "Build shared library" OFF)
b.xcode build 一下targets中的install, 删掉报错的无关targets
8.metal compiler options里面的HEADER_SEARCH_PATH设置为$(PROJECT_DIR)/Headers/Public/SoftVision，从而在metal文件中正确引用。# .podspec设置xcconfig => MTL_HEADER_SEARCH_PATHS (通过Pods=>Target=>Build Settings=>选中该条目=>右边栏"Quick Help"=>Declaration获取该KEY
9.bundle 路径：~/Library/Developer/Xcode/DerivedData/ModelIt-erwcyofpzohadogxwxoskaoqicer/Build/Products/Debug-iphoneos/SoftVision/metalshaders.bundle
10. todo 连接metadata信息，解决exif格式显示问题。
